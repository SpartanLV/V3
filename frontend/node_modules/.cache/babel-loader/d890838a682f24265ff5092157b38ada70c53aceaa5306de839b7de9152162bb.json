{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spring2025\\\\CSE470\\\\CSE470 Project\\\\V3\\\\frontend\\\\src\\\\components\\\\NotificationBell.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Badge, Dropdown, ListGroup } from 'react-bootstrap';\nimport api from '../services/api';\nimport { subscribeToNotifications } from '../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationBell = ({\n  userId\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const res = await api.get(`/notifications?userId=${userId}`);\n        setNotifications(res.data);\n        setUnreadCount(res.data.filter(n => !n.read).length);\n      } catch (err) {\n        console.error('Failed to load notifications:', err);\n      }\n    };\n    fetchNotifications();\n    const handleNewNotification = notification => {\n      setNotifications(prev => [notification, ...prev]);\n      setUnreadCount(prev => prev + 1);\n    };\n    subscribeToNotifications(handleNewNotification);\n  }, [userId]);\n  const markAsRead = async id => {\n    try {\n      await api.patch(`/notifications/${id}/read`);\n      setNotifications(notifications.map(n => n._id === id ? {\n        ...n,\n        read: true\n      } : n));\n      setUnreadCount(unreadCount - 1);\n    } catch (err) {\n      console.error('Failed to mark as read:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dropdown, {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n      variant: \"light\",\n      id: \"dropdown-notifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-bell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(Badge, {\n        pill: true,\n        bg: \"danger\",\n        children: unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n      children: /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          action: true,\n          onClick: () => markAsRead(notification._id),\n          className: !notification.read ? 'fw-bold' : '',\n          children: notification.message\n        }, notification._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationBell, \"ZKbdJ33iEtJJ28qAyIajw14iMHg=\");\n_c = NotificationBell;\nexport default NotificationBell;\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");","map":{"version":3,"names":["React","useState","useEffect","Badge","Dropdown","ListGroup","api","subscribeToNotifications","jsxDEV","_jsxDEV","NotificationBell","userId","_s","notifications","setNotifications","unreadCount","setUnreadCount","fetchNotifications","res","get","data","filter","n","read","length","err","console","error","handleNewNotification","notification","prev","markAsRead","id","patch","map","_id","children","Toggle","variant","className","fileName","_jsxFileName","lineNumber","columnNumber","pill","bg","Menu","Item","action","onClick","message","_c","$RefreshReg$"],"sources":["D:/Spring2025/CSE470/CSE470 Project/V3/frontend/src/components/NotificationBell.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Badge, Dropdown, ListGroup } from 'react-bootstrap';\r\nimport api from '../services/api';\r\nimport { subscribeToNotifications } from '../services/socket';\r\n\r\nconst NotificationBell = ({ userId }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [unreadCount, setUnreadCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const res = await api.get(`/notifications?userId=${userId}`);\r\n        setNotifications(res.data);\r\n        setUnreadCount(res.data.filter(n => !n.read).length);\r\n      } catch (err) {\r\n        console.error('Failed to load notifications:', err);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n    const handleNewNotification = (notification) => {\r\n      setNotifications(prev => [notification, ...prev]);\r\n      setUnreadCount(prev => prev + 1);\r\n    };\r\n    \r\n    subscribeToNotifications(handleNewNotification);\r\n  }, [userId]);\r\n\r\n  const markAsRead = async (id) => {\r\n    try {\r\n      await api.patch(`/notifications/${id}/read`);\r\n      setNotifications(notifications.map(n => \r\n        n._id === id ? { ...n, read: true } : n\r\n      ));\r\n      setUnreadCount(unreadCount - 1);\r\n    } catch (err) {\r\n      console.error('Failed to mark as read:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dropdown>\r\n      <Dropdown.Toggle variant=\"light\" id=\"dropdown-notifications\">\r\n        <i className=\"bi bi-bell\"></i>\r\n        {unreadCount > 0 && <Badge pill bg=\"danger\">{unreadCount}</Badge>}\r\n      </Dropdown.Toggle>\r\n      <Dropdown.Menu>\r\n        <ListGroup variant=\"flush\">\r\n          {notifications.map(notification => (\r\n            <ListGroup.Item \r\n              key={notification._id}\r\n              action \r\n              onClick={() => markAsRead(notification._id)}\r\n              className={!notification.read ? 'fw-bold' : ''}\r\n            >\r\n              {notification.message}\r\n            </ListGroup.Item>\r\n          ))}\r\n        </ListGroup>\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default NotificationBell;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}