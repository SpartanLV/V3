{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spring2025\\\\CSE470\\\\CSE470 Project\\\\V3\\\\frontend\\\\src\\\\pages\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport { inferRoleFromEmail } from '../utils/roleUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    email: '',\n    password: '',\n    name: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const role = inferRoleFromEmail(form.email);\n    if (!role) {\n      setError('Please use a @g.bracu.ac.bd (student) or @bracu.ac.bd (staff) email.');\n      return;\n    }\n    try {\n      await api.post('/auth/register', form); // ← removed role\n      navigate('/login');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Registration failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Full Name\",\n      value: form.name,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"BRACU Email\",\n      value: form.email,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: form.password,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"xiOpPQI9EfhaxRpie17gf8lAlW8=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","api","inferRoleFromEmail","jsxDEV","_jsxDEV","Register","_s","navigate","form","setForm","email","password","name","error","setError","handleChange","e","target","value","handleSubmit","preventDefault","role","post","err","_err$response","_err$response$data","response","data","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["D:/Spring2025/CSE470/CSE470 Project/V3/frontend/src/pages/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport { inferRoleFromEmail } from '../utils/roleUtils';\r\n\r\nexport default function Register() {\r\n  const navigate = useNavigate();\r\n  const [form, setForm] = useState({ email: '', password: '', name: '' });\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = e => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n  \r\n    const role = inferRoleFromEmail(form.email);\r\n    if (!role) {\r\n      setError('Please use a @g.bracu.ac.bd (student) or @bracu.ac.bd (staff) email.');\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      await api.post('/auth/register', form); // ← removed role\r\n      navigate('/login');\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || 'Registration failed.');\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"Full Name\"\r\n        value={form.name}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        placeholder=\"BRACU Email\"\r\n        value={form.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        placeholder=\"Password\"\r\n        value={form.password}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}