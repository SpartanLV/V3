{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spring2025\\\\CSE470\\\\CSE470 Project\\\\V3\\\\frontend\\\\src\\\\components\\\\AvailableSlots.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableSlots = () => {\n  _s();\n  const [slots, setSlots] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [userId, setUserId] = useState('12345'); // Example userId, this should be dynamically passed\n\n  // Fetch available slots from the backend\n  useEffect(() => {\n    const fetchSlots = async () => {\n      try {\n        const res = await axios.get('/api/bookings/available-slots');\n        setSlots(res.data);\n      } catch (err) {\n        setError('Failed to fetch slots.');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSlots();\n  }, []);\n\n  // Handle booking of the slot\n  const handleBooking = async slotId => {\n    try {\n      const response = await axios.post('/api/bookings/book-slot', {\n        userId,\n        slotId\n      });\n      alert(response.data.message); // Show success message\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Booking failed');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading available slots...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (slots.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No available slots right now.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 36\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"available-slots-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Booking Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"slots-list\",\n      children: slots.map((slot, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"slot-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: slot.facility\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 57\n        }, this), new Date(slot.startTime).toLocaleString(), \" \\u2192 \", new Date(slot.endTime).toLocaleString(), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBooking(slot._id),\n          className: \"btn btn-primary\",\n          children: \"Book This Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailableSlots, \"rIQgBsIteQnR/vsbiMPI4BxqD/c=\");\n_c = AvailableSlots;\nexport default AvailableSlots;\nvar _c;\n$RefreshReg$(_c, \"AvailableSlots\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AvailableSlots","_s","slots","setSlots","loading","setLoading","error","setError","userId","setUserId","fetchSlots","res","get","data","err","console","handleBooking","slotId","response","post","alert","message","_err$response","_err$response$data","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","slot","idx","facility","Date","startTime","toLocaleString","endTime","onClick","_id","_c","$RefreshReg$"],"sources":["D:/Spring2025/CSE470/CSE470 Project/V3/frontend/src/components/AvailableSlots.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AvailableSlots = () => {\r\n    const [slots, setSlots] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [userId, setUserId] = useState('12345'); // Example userId, this should be dynamically passed\r\n\r\n    // Fetch available slots from the backend\r\n    useEffect(() => {\r\n        const fetchSlots = async () => {\r\n            try {\r\n                const res = await axios.get('/api/bookings/available-slots');\r\n                setSlots(res.data);\r\n            } catch (err) {\r\n                setError('Failed to fetch slots.');\r\n                console.error(err);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchSlots();\r\n    }, []);\r\n\r\n    // Handle booking of the slot\r\n    const handleBooking = async (slotId) => {\r\n        try {\r\n            const response = await axios.post('/api/bookings/book-slot', {\r\n                userId,\r\n                slotId,\r\n            });\r\n            alert(response.data.message); // Show success message\r\n        } catch (err) {\r\n            alert(err.response?.data?.message || 'Booking failed');\r\n        }\r\n    };\r\n\r\n    if (loading) return <p>Loading available slots...</p>;\r\n    if (error) return <p>{error}</p>;\r\n    if (slots.length === 0) return <p>No available slots right now.</p>;\r\n\r\n    return (\r\n        <div className=\"available-slots-container\">\r\n            <h2>Available Booking Slots</h2>\r\n            <ul className=\"slots-list\">\r\n                {slots.map((slot, idx) => (\r\n                    <li key={idx} className=\"slot-item\">\r\n                        <strong>{slot.facility}</strong><br />\r\n                        {new Date(slot.startTime).toLocaleString()} â†’ {new Date(slot.endTime).toLocaleString()}\r\n                        <button\r\n                            onClick={() => handleBooking(slot._id)}\r\n                            className=\"btn btn-primary\"\r\n                        >\r\n                            Book This Slot\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AvailableSlots;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}