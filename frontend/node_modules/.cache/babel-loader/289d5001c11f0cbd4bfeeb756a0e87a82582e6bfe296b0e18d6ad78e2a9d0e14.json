{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\470 Project\\\\V3\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../services/api';\nimport { setupSocket, disconnectSocket } from '../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(() => {\n    const stored = localStorage.getItem('user');\n    try {\n      return stored ? JSON.parse(stored) : null;\n    } catch (e) {\n      console.error(\"Error parsing 'user' from localStorage:\", e);\n      return null;\n    }\n  });\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const validate = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          // Validate the token\n          const res = await api.get('/auth/validate');\n          setUser(res.data.user);\n          setupSocket(res.data.user._id);\n        } else {\n          setUser(null);\n        }\n      } catch (err) {\n        console.error('Token validation failed:', err);\n        setUser(null); // Clear user data on failure\n      } finally {\n        setLoading(false); // End loading state\n      }\n    };\n    validate();\n    return () => {\n      disconnectSocket();\n    };\n  }, []);\n  const login = (token, user) => {\n    localStorage.setItem('token', token); // Store the token in localStorage\n    localStorage.setItem('user', JSON.stringify(user)); // Store user info in localStorage\n    setupSocket(user._id); // Setup socket connection\n    setUser(user); // Update user in context\n  };\n  const logout = () => {\n    localStorage.removeItem('token'); // Remove the token from localStorage\n    localStorage.removeItem('user'); // Remove user data from localStorage\n    disconnectSocket(); // Disconnect the socket\n    setUser(null); // Clear the user from context\n  };\n  const refreshUser = async () => {\n    try {\n      const res = await api.get('/auth/validate');\n      localStorage.setItem('user', JSON.stringify(res.data.user));\n      setUser(res.data.user);\n    } catch (err) {\n      console.error('Failed to refresh user data:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      refreshUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"/T7jwtUR0/hoOLzZ/Vpp2KgZdts=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","setupSocket","disconnectSocket","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","stored","localStorage","getItem","JSON","parse","e","console","error","loading","setLoading","validate","token","res","get","data","_id","err","login","setItem","stringify","logout","removeItem","refreshUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/470 Project/V3/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\nimport { setupSocket, disconnectSocket } from '../services/socket';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(() => {\r\n    const stored = localStorage.getItem('user');\r\n    try {\r\n      return stored ? JSON.parse(stored) : null;\r\n    } catch (e) {\r\n      console.error(\"Error parsing 'user' from localStorage:\", e);\r\n      return null;\r\n    }\r\n  });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const validate = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          // Validate the token\r\n          const res = await api.get('/auth/validate');\r\n          setUser(res.data.user);\r\n          setupSocket(res.data.user._id);\r\n        } else {\r\n          setUser(null);\r\n        }\r\n      } catch (err) {\r\n        console.error('Token validation failed:', err);\r\n        setUser(null); // Clear user data on failure\r\n      } finally {\r\n        setLoading(false); // End loading state\r\n      }\r\n    };\r\n\r\n    validate();\r\n    return () => {\r\n      disconnectSocket();\r\n    };\r\n  }, []);\r\n\r\n  const login = (token, user) => {\r\n    localStorage.setItem('token', token); // Store the token in localStorage\r\n    localStorage.setItem('user', JSON.stringify(user)); // Store user info in localStorage\r\n    setupSocket(user._id); // Setup socket connection\r\n    setUser(user); // Update user in context\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token'); // Remove the token from localStorage\r\n    localStorage.removeItem('user'); // Remove user data from localStorage\r\n    disconnectSocket(); // Disconnect the socket\r\n    setUser(null); // Clear the user from context\r\n  };\r\n\r\n  const refreshUser = async () => {\r\n    try {\r\n      const res = await api.get('/auth/validate');\r\n      localStorage.setItem('user', JSON.stringify(res.data.user));\r\n      setUser(res.data.user);\r\n    } catch (err) {\r\n      console.error('Failed to refresh user data:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, logout, refreshUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}