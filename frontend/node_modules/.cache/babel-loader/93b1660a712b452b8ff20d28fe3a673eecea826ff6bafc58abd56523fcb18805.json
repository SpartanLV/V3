{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spring2025\\\\CSE470\\\\CSE470 Project\\\\V3\\\\frontend\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport api from '../services/api'; // Assuming you've set up an API service\nimport LoadingSpinner from '../components/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext); // Get the current logged-in user\n  const [profile, setProfile] = useState(null); // User's profile data\n  const [isEditing, setIsEditing] = useState(false); // State to toggle edit mode\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState(null); // State to handle errors\n\n  const navigate = useNavigate();\n\n  // Fetch profile data on component mount\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.role) {\n      // Fetch user profile data from the backend\n      api.get('/users/profile').then(response => {\n        setProfile(response.data); // Set profile data\n        setFormData({\n          name: response.data.name,\n          email: response.data.email,\n          password: '' // Don't expose password\n        });\n      }).catch(error => {\n        var _error$response, _error$response2;\n        console.error(\"Error fetching profile:\", error);\n        setError(\"Error fetching profile data.\");\n        if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n          navigate('/login'); // Redirect to login if the user isn't authenticated\n        }\n      });\n    }\n  }, [user, navigate]);\n\n  // Handle form input change\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission for profile update\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Send update request to the backend, excluding the password if it's empty\n    const dataToUpdate = {\n      ...formData\n    };\n    if (!formData.password) {\n      delete dataToUpdate.password; // Don't send password if it's empty\n    }\n    api.put('/users/profile', dataToUpdate).then(response => {\n      setProfile(response.data); // Update local profile data\n      setIsEditing(false); // Exit edit mode\n    }).catch(error => {\n      console.error(\"Error updating profile:\", error);\n      setError(\"Error updating profile data.\");\n    });\n  };\n  if (!profile && !error) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this); // Show loading spinner while profile is being fetched\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: user.role === 'student' ? 'Student Profile' : 'Faculty Profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), !isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 14\n        }, this), \" \", profile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 14\n        }, this), \" \", profile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // If editing, show form to update profile\n    _jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          required: true,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          placeholder: \"Leave blank to keep the current password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setIsEditing(false),\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"HhXir0aZiP8CfzSNx/pvSEjaT4E=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useContext","AuthContext","api","LoadingSpinner","jsxDEV","_jsxDEV","Profile","_s","user","profile","setProfile","isEditing","setIsEditing","formData","setFormData","name","email","password","error","setError","navigate","role","get","then","response","data","catch","_error$response","_error$response2","console","status","handleChange","e","value","target","prevData","handleSubmit","preventDefault","dataToUpdate","put","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","onSubmit","type","onChange","required","disabled","placeholder","_c","$RefreshReg$"],"sources":["D:/Spring2025/CSE470/CSE470 Project/V3/frontend/src/pages/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport api from '../services/api';  // Assuming you've set up an API service\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\nconst Profile = () => {\r\n  const { user } = useContext(AuthContext);  // Get the current logged-in user\r\n  const [profile, setProfile] = useState(null);  // User's profile data\r\n  const [isEditing, setIsEditing] = useState(false);  // State to toggle edit mode\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [error, setError] = useState(null); // State to handle errors\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch profile data on component mount\r\n  useEffect(() => {\r\n    if (user?.role) {\r\n      // Fetch user profile data from the backend\r\n      api\r\n        .get('/users/profile')\r\n        .then((response) => {\r\n          setProfile(response.data);  // Set profile data\r\n          setFormData({\r\n            name: response.data.name,\r\n            email: response.data.email,\r\n            password: '', // Don't expose password\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching profile:\", error);\r\n          setError(\"Error fetching profile data.\");\r\n          if (error.response?.status === 401 || error.response?.status === 403) {\r\n            navigate('/login');  // Redirect to login if the user isn't authenticated\r\n          }\r\n        });\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  // Handle form input change\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Handle form submission for profile update\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Send update request to the backend, excluding the password if it's empty\r\n    const dataToUpdate = { ...formData };\r\n    if (!formData.password) {\r\n      delete dataToUpdate.password;  // Don't send password if it's empty\r\n    }\r\n\r\n    api\r\n      .put('/users/profile', dataToUpdate)\r\n      .then((response) => {\r\n        setProfile(response.data);  // Update local profile data\r\n        setIsEditing(false);  // Exit edit mode\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error updating profile:\", error);\r\n        setError(\"Error updating profile data.\");\r\n      });\r\n  };\r\n\r\n  if (!profile && !error) {\r\n    return <LoadingSpinner />; // Show loading spinner while profile is being fetched\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h2>{user.role === 'student' ? 'Student Profile' : 'Faculty Profile'}</h2>\r\n\r\n      {/* Display error if there's any */}\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      {/* If not editing, show profile data */}\r\n      {!isEditing ? (\r\n        <div className=\"profile-info\">\r\n          <p><strong>Name:</strong> {profile.name}</p>\r\n          <p><strong>Email:</strong> {profile.email}</p>\r\n          {/* Add more fields as needed */}\r\n          <button onClick={() => setIsEditing(true)}>Edit Profile</button>\r\n        </div>\r\n      ) : (\r\n        // If editing, show form to update profile\r\n        <form onSubmit={handleSubmit}>\r\n          <div>\r\n            <label>Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n              disabled\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              placeholder=\"Leave blank to keep the current password\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\">Save Changes</button>\r\n          <button type=\"button\" onClick={() => setIsEditing(false)}>\r\n            Cancel\r\n          </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}