{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spring2025\\\\CSE470\\\\CSE470 Project\\\\V3\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport api from '../services/api';\nimport LoadingSpinner from './LoadingSpinner'; // Create this component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const [authStatus, setAuthStatus] = useState({\n    isValid: null,\n    error: null\n  });\n  useEffect(() => {\n    const validateToken = async () => {\n      try {\n        await api.get('/auth/validate');\n        setAuthStatus({\n          isValid: true,\n          error: null\n        });\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setAuthStatus({\n          isValid: false,\n          error: ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Unauthorized'\n        });\n      }\n    };\n    validateToken();\n\n    // Cleanup function\n    return () => {\n      // Cancel any pending requests if needed\n    };\n  }, []);\n  if (authStatus.isValid === null) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n  if (!authStatus.isValid) {\n    // Optional: Store the attempted location for redirect after login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return children;\n};\n_s(ProtectedRoute, \"1i3kP7OQEeWxBlZEbcwepaFLWtc=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","api","LoadingSpinner","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","authStatus","setAuthStatus","isValid","error","validateToken","get","err","_err$response","_err$response$data","response","data","message","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","location","replace","_c","$RefreshReg$"],"sources":["D:/Spring2025/CSE470/CSE470 Project/V3/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport LoadingSpinner from './LoadingSpinner'; // Create this component\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const [authStatus, setAuthStatus] = useState({\r\n    isValid: null,\r\n    error: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    const validateToken = async () => {\r\n      try {\r\n        await api.get('/auth/validate');\r\n        setAuthStatus({ isValid: true, error: null });\r\n      } catch (err) {\r\n        setAuthStatus({ isValid: false, error: err.response?.data?.message || 'Unauthorized' });\r\n      }\r\n    };\r\n    \r\n    validateToken();\r\n    \r\n    // Cleanup function\r\n    return () => {\r\n      // Cancel any pending requests if needed\r\n    };\r\n  }, []);\r\n\r\n  if (authStatus.isValid === null) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  if (!authStatus.isValid) {\r\n    // Optional: Store the attempted location for redirect after login\r\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAOC,cAAc,MAAM,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC;IAC3CW,OAAO,EAAE,IAAI;IACbC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACd,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMX,GAAG,CAACY,GAAG,CAAC,gBAAgB,CAAC;QAC/BJ,aAAa,CAAC;UAAEC,OAAO,EAAE,IAAI;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;MAC/C,CAAC,CAAC,OAAOG,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACZP,aAAa,CAAC;UAAEC,OAAO,EAAE,KAAK;UAAEC,KAAK,EAAE,EAAAI,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcG,IAAI,cAAAF,kBAAA,uBAAlBA,kBAAA,CAAoBG,OAAO,KAAI;QAAe,CAAC,CAAC;MACzF;IACF,CAAC;IAEDP,aAAa,CAAC,CAAC;;IAEf;IACA,OAAO,MAAM;MACX;IAAA,CACD;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,UAAU,CAACE,OAAO,KAAK,IAAI,EAAE;IAC/B,oBAAON,OAAA,CAACF,cAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3B;EAEA,IAAI,CAACf,UAAU,CAACE,OAAO,EAAE;IACvB;IACA,oBAAON,OAAA,CAACJ,QAAQ;MAACwB,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEC;MAAS,CAAE;MAACC,OAAO;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;EAEA,OAAOjB,QAAQ;AACjB,CAAC;AAACC,EAAA,CAlCIF,cAAc;AAAAwB,EAAA,GAAdxB,cAAc;AAoCpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}