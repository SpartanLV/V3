{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spring2025\\\\CSE470\\\\CSE470 Project\\\\V3\\\\frontend\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/ChatBox.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport { setupSocket, subscribeToMessages, subscribeToMessageSent, sendMessageWS, disconnectSocket } from '../services/socket';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  recipient,\n  currentUserId\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const bottomRef = useRef(null);\n\n  // Scroll to the bottom\n  const scrollToBottom = () => {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    // guard: only run when we know both participants\n    if (!(recipient !== null && recipient !== void 0 && recipient._id) || !currentUserId) {\n      console.warn('ChatBox: missing recipient or current user ID');\n      return;\n    }\n    let isMounted = true;\n    const fetchMessages = async () => {\n      try {\n        const res = await api.get('/messages');\n        const conv = res.data.filter(msg => {\n          return msg.sender === recipient._id && msg.recipient === currentUserId || msg.sender === currentUserId && msg.recipient === recipient._id;\n        });\n        if (isMounted) {\n          setMessages(conv);\n          scrollToBottom();\n        }\n      } catch (err) {\n        console.error('Error loading messages:', err);\n      }\n    };\n    fetchMessages();\n    setupSocket();\n\n    // shared handler for incoming/ack'd messages\n    const handleIncoming = msg => {\n      if (!msg) return;\n      const {\n        sender,\n        recipient: msgRecipient\n      } = msg;\n      if (sender === recipient._id && msgRecipient === currentUserId || sender === currentUserId && msgRecipient === recipient._id) {\n        setMessages(prev => [...prev, msg]);\n        scrollToBottom();\n      }\n    };\n    subscribeToMessages(handleIncoming);\n    subscribeToMessageSent(handleIncoming);\n    return () => {\n      isMounted = false;\n      disconnectSocket();\n    };\n  }, [recipient, currentUserId]);\n  const handleSend = e => {\n    e.preventDefault();\n    const text = input.trim();\n    if (!text) return;\n    if (!(recipient !== null && recipient !== void 0 && recipient._id) || !currentUserId) {\n      console.error('ChatBox: missing recipient or current user ID');\n      return;\n    }\n    sendMessageWS(recipient._id, text);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbox\",\n    style: {\n      border: '1px solid #ccc',\n      padding: 12,\n      borderRadius: 8\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: 300,\n        overflowY: 'auto',\n        marginBottom: 8\n      },\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === recipient._id ? 'left' : 'right',\n          marginBottom: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            background: msg.sender === recipient._id ? '#eee' : '#b3d4fc',\n            padding: '6px 10px',\n            borderRadius: 12,\n            display: 'inline-block',\n            maxWidth: '80%',\n            wordWrap: 'break-word'\n          },\n          children: msg.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, msg._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: bottomRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSend,\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        style: {\n          flex: 1,\n          padding: '8px',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          marginRight: '8px',\n          fontSize: '14px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: '8px 12px',\n          border: '1px solid #ccc',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"fgDbM/vrhbelCp+9Dh8Cjohw9/E=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useState","useRef","setupSocket","subscribeToMessages","subscribeToMessageSent","sendMessageWS","disconnectSocket","api","jsxDEV","_jsxDEV","ChatBox","recipient","currentUserId","_s","messages","setMessages","input","setInput","bottomRef","scrollToBottom","_bottomRef$current","current","scrollIntoView","behavior","_id","console","warn","isMounted","fetchMessages","res","get","conv","data","filter","msg","sender","err","error","handleIncoming","msgRecipient","prev","handleSend","e","preventDefault","text","trim","className","style","border","padding","borderRadius","children","height","overflowY","marginBottom","map","textAlign","background","display","maxWidth","wordWrap","body","fileName","_jsxFileName","lineNumber","columnNumber","ref","onSubmit","type","value","onChange","target","placeholder","flex","marginRight","fontSize","cursor","_c","$RefreshReg$"],"sources":["D:/Spring2025/CSE470/CSE470 Project/V3/frontend/src/components/ChatBox.js"],"sourcesContent":["// frontend/src/components/ChatBox.js\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n  setupSocket,\r\n  subscribeToMessages,\r\n  subscribeToMessageSent,\r\n  sendMessageWS,\r\n  disconnectSocket,\r\n} from '../services/socket';\r\nimport api from '../services/api';\r\n\r\nconst ChatBox = ({ recipient, currentUserId }) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const bottomRef = useRef(null);\r\n\r\n  // Scroll to the bottom\r\n  const scrollToBottom = () => {\r\n    bottomRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // guard: only run when we know both participants\r\n    if (!recipient?._id || !currentUserId){\r\n      console.warn('ChatBox: missing recipient or current user ID');\r\n      return;\r\n    }\r\n    let isMounted = true;\r\n\r\n    const fetchMessages = async () => {\r\n      try {\r\n        const res = await api.get('/messages');\r\n        const conv = res.data.filter(msg => {\r\n          return (\r\n            (msg.sender === recipient._id && msg.recipient === currentUserId) ||\r\n            (msg.sender === currentUserId && msg.recipient === recipient._id)\r\n          );\r\n        });\r\n        if (isMounted) {\r\n          setMessages(conv);\r\n          scrollToBottom();\r\n        }\r\n      } catch (err) {\r\n        console.error('Error loading messages:', err);\r\n      }\r\n    };\r\n\r\n    fetchMessages();\r\n    setupSocket();\r\n\r\n    // shared handler for incoming/ack'd messages\r\n    const handleIncoming = msg => {\r\n      if (!msg) return;\r\n      const { sender, recipient: msgRecipient } = msg;\r\n      if (\r\n        (sender === recipient._id && msgRecipient === currentUserId) ||\r\n        (sender === currentUserId && msgRecipient === recipient._id)\r\n      ) {\r\n        setMessages(prev => [...prev, msg]);\r\n        scrollToBottom();\r\n      }\r\n    };\r\n\r\n    subscribeToMessages(handleIncoming);\r\n    subscribeToMessageSent(handleIncoming);\r\n\r\n    return () => {\r\n      isMounted = false;\r\n      disconnectSocket();\r\n    };\r\n  }, [recipient, currentUserId]);\r\n\r\n  const handleSend = e => {\r\n    e.preventDefault();\r\n    const text = input.trim();\r\n    if (!text) return;\r\n    if (!recipient?._id || !currentUserId) {\r\n      console.error('ChatBox: missing recipient or current user ID');\r\n      return;\r\n    }\r\n    sendMessageWS(recipient._id, text);\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbox\" style={{ border: '1px solid #ccc', padding: 12, borderRadius: 8 }}>\r\n      <div style={{ height: 300, overflowY: 'auto', marginBottom: 8 }}>\r\n        {messages.map(msg => (\r\n          <div\r\n            key={msg._id}\r\n            style={{\r\n              textAlign: msg.sender === recipient._id ? 'left' : 'right',\r\n              marginBottom: 4,\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                background: msg.sender === recipient._id ? '#eee' : '#b3d4fc',\r\n                padding: '6px 10px',\r\n                borderRadius: 12,\r\n                display: 'inline-block',\r\n                maxWidth: '80%',\r\n                wordWrap: 'break-word',\r\n              }}\r\n            >\r\n              {msg.body}\r\n            </span>\r\n          </div>\r\n        ))}\r\n        <div ref={bottomRef} />\r\n      </div>\r\n\r\n      <form onSubmit={handleSend} style={{ display: 'flex' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={e => setInput(e.target.value)}\r\n          placeholder=\"Type a message...\"\r\n          style={{\r\n            flex: 1,\r\n            padding: '8px',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '4px',\r\n            marginRight: '8px',\r\n            fontSize: '14px',\r\n          }}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          style={{ padding: '8px 12px', border: '1px solid #ccc', borderRadius: '4px', cursor: 'pointer' }}\r\n        >\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}